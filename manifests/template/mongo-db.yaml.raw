apiVersion: templating.flanksource.com/v1
kind: Template
metadata:
  name: mongo-db
spec:
  source:
    apiVersion: db.flanksource.com/v1
    kind: MongoDB
  resources:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: mongodb-{{ .metadata.name }}-credentials
        namespace: '{{ .metadata.namespace }}'
      type: Opaque
      stringData:
        password: '{{- kget (print "secret/" .metadata.namespace "/mongodb-" .metadata.name "-credentials") "password" | default (random.AlphaNum 16) -}}'
        admin_password: '{{- kget (print "secret/" .metadata.namespace "/mongodb-" .metadata.name "-credentials") "admin_password" | default (random.AlphaNum 16) -}}'

    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mongodb-{{ .metadata.name }}
        namespace: '{{ .metadata.namespace }}'
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: mongodb
            app.kubernetes.io/instance: '{{ .metadata.name }}'
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app.kubernetes.io/name: mongodb
              app.kubernetes.io/instance: '{{ .metadata.name }}'
          spec:
            securityContext:
              fsGroup: 184
            containers:
              - image: docker.io/centos/mongodb-36-centos7:1
                name: mongodb
                env:
                  - name: MONGODB_DATABASE
                    value: '{{ .spec.database }}'
                  - name: MONGODB_USER
                    value: '{{ .spec.user }}'
                  - name: MONGODB_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: mongodb-{{ .metadata.name }}-credentials
                        key: password
                  - name: MONGODB_ADMIN_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: mongodb-{{ .metadata.name }}-credentials
                        key: admin_password
                ports:
                  - containerPort: 27017
                resources:
                  requests:
                    memory: '{{ .spec.memory | default "64Mi" }}'
                    cpu: '{{ .spec.cpu | default "50m" }}'
                  limits:
                    memory: '{{ .spec.memory | default "300Mi" }}'
                    cpu: '{{ .spec.cpu | default "100m" }}'
                volumeMounts:
                  - mountPath: /var/lib/mongodb/data
                    name: mongodata
            restartPolicy: Always
            volumes:
              - name: mongodata
                persistentVolumeClaim:
                  claimName: mongodata-{{ .metadata.name }}

    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "mongodata-{{ .metadata.name }}"
        namespace: '{{ .metadata.namespace }}'
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: '{{ .spec.storage.size | default "5Gi" }}'

    - apiVersion: v1
      kind: Service
      metadata:
        name: "mongodb-{{ .metadata.name }}"
        namespace: '{{ .metadata.namespace }}'
      spec:
        ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
        selector:
          app.kubernetes.io/name: mongodb
          app.kubernetes.io/instance: '{{ .metadata.name }}'