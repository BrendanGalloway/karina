TARGET_UPSTREAM_HELM_CHARTS := $(patsubst %,%/zzz_last_build,$(wildcard upstream/**/helm))
TARGET_CRD_FILES := $(patsubst upstream/%/crd,crd/%.yaml,$(wildcard upstream/**/crd))
TARGET_MANIFEST_FILES := $(patsubst upstream/%/base,%.yaml,$(wildcard upstream/**/base))

build: build-upstream-helm-charts build-crds build-base
build-upstream-helm-charts: $(TARGET_UPSTREAM_HELM_CHARTS)
build-crds: $(TARGET_CRD_FILES)
build-base: $(TARGET_MANIFEST_FILES)

define BUILD_HELM_CHART
	@if [ -d "$*/helm" ]; then \
		echo "Generate templates for helm chart defined in $*/helm..." && \
		cd $*/helm && \
		helm template $$(yq -r '.chart_name' chart.yaml) --values values.yaml --output-dir ./generated_templates -n $$(yq -r '.namespace' chart.yaml) --version $$(yq -r '.version' chart.yaml) --repo=$$(yq -r '.repo' chart.yaml) --include-crds && \
		echo $$(date +%s) > zzz_last_build; \
	fi
endef

define BUILD_CRD
	@if [ -d "upstream/$*/crd" ]; then \
		echo "Generating $@..." && \
		out=$$(kustomize build --load_restrictor none upstream/$*/crd) && \
		printf "# This file was generated by running 'make $@' in manifests directory\n%s" "$$out" > $@; \
	fi
endef

define BUILD_BASE
	@if [ -d "upstream/$*/base" ]; then \
		echo "Generating $@..." && \
		out=$$(kustomize build --load_restrictor none upstream/$*/base) && \
		printf "# This file was generated by running 'make $@' in manifests directory\n%s" "$$out" > $@; \
	fi
endef

%/helm/zzz_last_build: %/helm/chart.yaml %/helm/values.yaml
	$(BUILD_HELM_CHART)

.SECONDEXPANSION:
crd/%.yaml: $$(wildcard upstream/$$*/crd/*) $$(wildcard upstream/$$*/helm/zzz_last_build)
	$(BUILD_CRD)

.SECONDEXPANSION:
%.yaml: $$(wildcard upstream/$$*/base/*) $$(wildcard upstream/$$*/helm/zzz_last_build)
	$(BUILD_BASE)

.PHONY: build build-upstream-helm-charts build-crds build-base
