---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: exporter-internal-certs
  namespace: harbor
spec:
  secretName: exporter-internal-certs
  dnsNames:
    - harbor-exporter
    - harbor-exporter.harbor.svc.cluster.local.
  issuerRef:
    name: default-issuer
    kind: ClusterIssuer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: harbor-exporter-env
  labels:
    app: harbor
  namespace: harbor
data:
  HARBOR_EXPORTER_PORT: "9090"
  HARBOR_EXPORTER_METRICS_PATH: "/metrics"
  HARBOR_EXPORTER_METRICS_ENABLED: "true"
  HARBOR_EXPORTER_CACHE_TIME: "30"
  HARBOR_EXPORTER_CACHE_CLEAN_INTERVAL: "14400"
  HARBOR_EXPORTER_TLS_CERT: "/harbor_cust_cert/tls.crt"
  HARBOR_EXPORTER_TLS_KEY: "/harbor_cust_cert/tls.key"
  HARBOR_METRIC_NAMESPACE: harbor
  HARBOR_METRIC_SUBSYSTEM: exporter
  HARBOR_SERVICE_SCHEME: "https"
  HARBOR_SERVICE_HOST: "harbor-core"
  HARBOR_SERVICE_PORT: "443"
  HARBOR_DATABASE_HOST: "{{.harbor.db.host}}"
  HARBOR_DATABASE_PORT: "{{.harbor.db.port}}"
  HARBOR_DATABASE_USERNAME: "{{.harbor.db.username}}"
  HARBOR_DATABASE_DBNAME: "registry"
  HARBOR_DATABASE_SSLMODE: "disable"
  HARBOR_DATABASE_MAX_IDLE_CONNS: "100"
  HARBOR_DATABASE_MAX_OPEN_CONNS: "50"
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: harbor-exporter
  namespace: harbor
  labels:
    app: harbor-exporter
spec:
  endpoints:
    - interval: 10s
      scrapeTimeout: 10s
      honorLabels: true
      port: metrics
      path: /metrics
      scheme: http
  jobLabel: "mgmt"
  selector:
    matchLabels:
      app: harbor
      component: exporter
    namespaceSelector:
      matchNames:
        - harbor
---
apiVersion: v1
kind: Service
metadata:
  name: harbor-exporter
  namespace: harbor
  labels:
    app: "harbor"
    component: exporter
spec:
  ports:
    - name: metrics
      port: 9090
  selector:
    app: "harbor"
    component: exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-exporter
  labels:
    app: harbor
    component: exporter
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor
      component: exporter
  template:
    metadata:
      labels:
        app: harbor
        component: exporter
    spec:
      securityContext:
        runAsUser: 10000
        fsGroup: 10000
      containers:
        - name: exporter
          image: docker.io/goharbor/harbor-exporter:{{.harbor.version}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 300
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          args: [ "-log-level", "info" ]
          envFrom:
            - configMapRef:
                name: "harbor-exporter-env"
            - secretRef:
                name: "harbor-exporter"
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              memory: 512Mi
              cpu: 200m
          ports:
            - containerPort: 9090
              name: metrics
          volumeMounts:
            - name: exporter-internal-certs
              mountPath: /harbor_cust_cert/custom-ca.crt
              subPath: ca.crt
            - name: exporter-internal-certs
              mountPath: /harbor_cust_cert/tls.key
              subPath: tls.key
            - name: exporter-internal-certs
              mountPath: /harbor_cust_cert/tls.crt
              subPath: tls.crt
      volumes:
        - name: exporter-internal-certs
          secret:
            secretName: exporter-internal-certs